apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    tekton.dev/categories: Code Quality
    tekton.dev/displayName: Helm-Docs
    tekton.dev/pipelines.minVersion: 0.12.1
    tekton.dev/platforms: linux/amd64
  name: helm-docs
  labels:
    {{- include "edp-tekton.labels" . | nindent 4 }}
spec:
  params:
    - name: BASE_IMAGE
      description: The base image for the task.
      default: docker.io/library/golang:1.18.4-bullseye
    - name: EXTRA_COMMANDS
      description: Arguments to add to the helm-docs step
      default: ""
  workspaces:
    - description: A workspace that contains fetched git repo.
      name: source
  steps:
    - image: $(params.BASE_IMAGE)
      name: helm-docs
      script: |
        set -ex
        $(params.EXTRA_COMMANDS)
      # script: |
      #   #!/bin/sh
      #   set -ex

      #   helmDocsReadme="deploy-templates/README.md"

      #   [ -f "${helmDocsReadme}" ] || (echo "The ${helmDocsReadme} file was not found. Run helm-docs to address the issue."; exit 1)
      #   cp ${helmDocsReadme} ${helmDocsReadme}.orig
      #   helm-docs
      #   diff ${helmDocsReadme} ${helmDocsReadme}.orig || \
      #       (echo "The ${helmDocsReadme} file was not updated. Run 'helm-docs' to address the issue."; exit 1)
      workingDir: $(workspaces.source.path)
