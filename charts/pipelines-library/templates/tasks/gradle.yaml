apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: gradle
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/displayName: Gradle
    tekton.dev/categories: Build Tools
    tekton.dev/tags: build-tool
    tekton.dev/platforms: "linux/amd64,linux/s390x,linux/ppc64le"
spec:
  description: >-
    This Task can be used to run a Gradle build.

  workspaces:
    - name: source
      description: The workspace consisting of the gradle project.
  params:
    - name: BASE_IMAGE
      description: Gradle base image.
      type: string
      default: gradle:7.5.1-jdk11
    - name: PROJECT_DIR
      description: The directory containing build.gradle
      type: string
      default: "."
    - name: TASKS
      description: 'The gradle tasks to run (default: build)'
      type: array
      default:
        - build
    - name: ci-secret
      type: string
      description: name of the secret holding the CI maven secret
      default: nexus-ci.user
    - name: ci-sonar-secret
      type: string
      description: name of the secret holding the CI sonar secret
      default: sonar-ciuser-token
    - name: EXTRA_ARGS
      description: Extra arguments to add to the gradle build
      default: |
        -Dorg.gradle.internal.publish.checksums.insecure=true \
        publish
  volumes:
    - name: settings-gradle
      configMap:
        name: custom-gradle-settings
  steps:
    - name: gradle-tasks
      image: $(params.BASE_IMAGE)
      volumeMounts:
        - name: settings-gradle
          mountPath: /var/configmap
      workingDir: $(workspaces.source.path)/$(params.PROJECT_DIR)
      script: |
        #!/bin/bash
        set -e

        gradle \
          -I \
          /var/configmap/init.gradle \
          -PnexusLogin=${CI_USERNAME} \
          -PnexusPassword=${CI_PASSWORD} \
          $(params.EXTRA_ARGS)
      env:
        - name: XDG_CONFIG_HOME
          value: $(workspaces.source.path)/$(params.PROJECT_DIR)
        - name: GRADLE_USER_HOME
          value: $(workspaces.source.path)/$(params.PROJECT_DIR)
        - name: SONAR_USER_HOME
          value: $(workspaces.source.path)/$(params.PROJECT_DIR)
        - name: SONAR_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.ci-sonar-secret)
              key: secret
        - name: CI_USERNAME
          valueFrom:
            secretKeyRef:
              name: $(params.ci-secret)
              key: username
        - name: CI_PASSWORD
          valueFrom:
            secretKeyRef:
              name: $(params.ci-secret)
              key: password
