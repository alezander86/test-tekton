{{ if eq .Values.global.gitProvider "github" }}
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: github-dotnet-dotnet-3.1-app-review
  labels:
    {{- include "edp-tekton.labels" . | nindent 4 }}
spec:
  workspaces:
    - name: shared-workspace
    - name: ssh-creds
  params:
    - name: pipelineUrl
      default: https://tekton-{{ .Release.Namespace }}.{{ .Values.global.dnsWildCard }}/#/namespaces/$(context.pipelineRun.namespace)/pipelineruns/$(context.pipelineRun.name)
      type: string
    - name: git-source-url
      default: "https://github.com/epmd-edp/dotnet-dotnet-dotnet-3.1"
      description: git url to clone
      type: string
    - name: git-source-revision
      description: 'git revision to checkout (branch, tag, sha, refâ€¦)'
      default: "edp"
      type: string
    - name: git-refspec
      description: Refspec to fetch before checking out revision.
      default: ""
      type: string
    - name: SONAR_URL
      default: 'http://sonar.{{ .Release.Namespace }}:9000'
      description: SonarQube url for static code analysis
      type: string
    - name: CODEBASE_NAME
      default: 'dotnet-dotnet-dotnet-3.1'
      description: "Project name"
      type: string
    - name: CODEBASEBRANCH_NAME
      description: "Codebasebranch name"
      type: string
    - name: dotnet-sdk-image-version
      default: 'mcr.microsoft.com/dotnet/sdk:3.1.423-alpine3.16'
      description: "dotnet-sdk image version"
      type: string
    - name: gitfullrepositoryname
      description: "repository full name"
      type: string
    - name: gitsha
      description: "commit sha"
      type: string
  tasks:

{{- include "github-review-start" . | nindent 4 }}

    - name: compile
      taskRef:
        kind: Task
        name: dotnet
      runAfter:
        - init-values
      params:
        - name: BASE_IMAGE
          value: $(params.dotnet-sdk-image-version)
        - name: EXTRA_COMMANDS
          value: |
            slnFilename=$(ls *.sln)
            dotnet publish $slnFilename
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: test
      taskRef:
        kind: Task
        name: dotnet
      runAfter:
        - compile
      params:
        - name: BASE_IMAGE
          value: $(params.dotnet-sdk-image-version)
        - name: EXTRA_COMMANDS
          value: |
            ls *Tests*/*.csproj | while read -r file;
                do dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover "${file}";
            done
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: sonar
      taskRef:
        kind: Task
        name: dotnet
      runAfter:
        - test
      params:
        - name: BASE_IMAGE
          value: 'epamedp/tekton-dotnet:0.1.0-SNAPSHOT.3'
        - name: EXTRA_COMMANDS
          value: |
            slnFilename=$(ls *.sln)
            # /d:sonar.qualitygate.wait=true \
            dotnet sonarscanner begin /d:sonar.host.url=$(params.SONAR_URL) \
              /d:sonar.login=${SONAR_TOKEN} \
              /k:$(params.CODEBASEBRANCH_NAME) \
              /n:$(params.CODEBASEBRANCH_NAME) \
              /d:sonar.cs.opencover.reportsPaths=./*Tests*/*.xml
            dotnet build ${sln_filename}
            dotnet sonarscanner end /d:sonar.login=${SONAR_TOKEN}
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: dockerfile-lint
      taskRef:
        kind: Task
        name: hadolint
      runAfter:
        - fetch-repository
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: dockerbuild-verify
      taskRef:
        kind: Task
        name: dockerbuild-verify
      runAfter:
        - sonar
        - dockerfile-lint
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: helm-lint
      taskRef:
        kind: Task
        name: helm-lint
      runAfter:
        - fetch-repository
      params:
        - name: EXTRA_COMMANDS
          value: |
            ct lint --validate-maintainers=false --charts deploy-templates/
      workspaces:
        - name: source
          workspace: shared-workspace

{{ include "github-review-vote" . | nindent 2 }}

{{ end }}
